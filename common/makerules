CC ?= gcc
LLC ?= llc
CLANG ?= clang

COMMON_DIR ?= ../../common
LIBBPF_DIR ?= ../../libbpf/src

KERNEL_TARGET_OBJECT = ${KERNEL_TARGET:=.o}
KERNEL_TARGET_LLC_OBJECT = ${KERNEL_TARGET:=.ll}
KERNEL_TARGET_DEPS ?=

USER_TARGET_DEPS ?=

LIBBPF_TARGET = $(LIBBPF_DIR)/libbpf.a

CFLAGS ?=
CFLAGS += "-I$(COMMON_DIR)/headers/"
CFLAGS += "-I$(LIBBPF_DIR)/root/usr/include/"
CFLAGS += "-I/usr/include/x86_64-linux-gnu"

.PHONY: all
all: $(KERNEL_TARGET_OBJECT) $(USER_TARGET)

$(LIBBPF_TARGET):
	cd $(LIBBPF_DIR) && $(MAKE) all; \
		mkdir -p root; DESTDIR=root $(MAKE) install_headers; \

$(USER_TARGET): %: %.c $(USER_TARGET_DEPS) $(LIBBPF_TARGET)
	$(CC) \
		$(CFLAGS) \
		-L$(LIBBPF_DIR) \
		-Wall \
		-Wno-unused-variable \
		-O2 -g -o $@ $< \
		-l:libbpf.a -lbpf -lelf

$(KERNEL_TARGET_OBJECT): %.o: %.c $(KERNEL_TARGET_DEPS)
	$(CLANG) -S \
	    -target bpf \
	    -D __BPF_TRACING__ \
	    $(CFLAGS) \
	    -Wall \
		-Wno-compare-distinct-pointer-types \
	    -O2 -emit-llvm -c -g -o $(KERNEL_TARGET_LLC_OBJECT) $<
	$(LLC) -march=bpf -filetype=obj -o $@ $(KERNEL_TARGET_LLC_OBJECT)

.PHONY: clean
clean:
	rm -f *.ll *.o $(USER_TARGET)
